{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suram\\\\food-ordering-app\\\\src\\\\pages\\\\AdminView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminView = () => {\n  _s();\n  // Dummy data simulating incoming orders\n  const [orders, setOrders] = useState([{\n    id: 1,\n    table: \"5\",\n    items: [{\n      id: 1,\n      name: \"Margherita Pizza\",\n      qty: 2\n    }, {\n      id: 4,\n      name: \"Cold Coffee\",\n      qty: 1\n    }],\n    status: \"pending\"\n  }, {\n    id: 2,\n    table: \"3\",\n    items: [{\n      id: 2,\n      name: \"Paneer Burger\",\n      qty: 1\n    }, {\n      id: 3,\n      name: \"Masala Dosa\",\n      qty: 2\n    }],\n    status: \"pending\"\n  }]);\n  const updateOrderStatus = (orderId, newStatus) => {\n    setOrders(prevOrders => prevOrders.map(order => order.id === orderId ? {\n      ...order,\n      status: newStatus\n    } : order));\n\n    // In real app, this is where you'd notify customer (e.g., via WebSocket or notification)\n    alert(`Order ${orderId} has been ${newStatus}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDDFE Admin Dashboard \\u2013 Incoming Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), orders.filter(order => order.status === \"pending\").length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No new orders at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 15,\n        marginBottom: 15,\n        borderRadius: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Table #\", order.table]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" x \", item.qty]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order.id, \"accepted\"),\n          style: {\n            marginRight: 10\n          },\n          children: \"\\u2705 Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order.id, \"rejected\"),\n          style: {\n            backgroundColor: \"crimson\",\n            color: \"#fff\"\n          },\n          children: \"\\u274C Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, order.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminView, \"q62Cl8GJ57pPwdlxLLlCvNaati0=\");\n_c = AdminView;\nexport default AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminView","_s","orders","setOrders","id","table","items","name","qty","status","updateOrderStatus","orderId","newStatus","prevOrders","map","order","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","length","border","marginBottom","borderRadius","item","marginTop","onClick","marginRight","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/suram/food-ordering-app/src/pages/AdminView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminView = () => {\r\n  // Dummy data simulating incoming orders\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      id: 1,\r\n      table: \"5\",\r\n      items: [\r\n        { id: 1, name: \"Margherita Pizza\", qty: 2 },\r\n        { id: 4, name: \"Cold Coffee\", qty: 1 }\r\n      ],\r\n      status: \"pending\"\r\n    },\r\n    {\r\n      id: 2,\r\n      table: \"3\",\r\n      items: [\r\n        { id: 2, name: \"Paneer Burger\", qty: 1 },\r\n        { id: 3, name: \"Masala Dosa\", qty: 2 }\r\n      ],\r\n      status: \"pending\"\r\n    }\r\n  ]);\r\n\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    setOrders((prevOrders) =>\r\n      prevOrders.map((order) =>\r\n        order.id === orderId ? { ...order, status: newStatus } : order\r\n      )\r\n    );\r\n\r\n    // In real app, this is where you'd notify customer (e.g., via WebSocket or notification)\r\n    alert(`Order ${orderId} has been ${newStatus}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>üßæ Admin Dashboard ‚Äì Incoming Orders</h2>\r\n\r\n      {orders.filter(order => order.status === \"pending\").length === 0 ? (\r\n        <p>No new orders at the moment.</p>\r\n      ) : (\r\n        orders.map((order) => (\r\n          <div\r\n            key={order.id}\r\n            style={{\r\n              border: \"1px solid #ccc\",\r\n              padding: 15,\r\n              marginBottom: 15,\r\n              borderRadius: 5\r\n            }}\r\n          >\r\n            <h3>Table #{order.table}</h3>\r\n            <ul>\r\n              {order.items.map((item) => (\r\n                <li key={item.id}>\r\n                  {item.name} x {item.qty}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div style={{ marginTop: 10 }}>\r\n              <button\r\n                onClick={() => updateOrderStatus(order.id, \"accepted\")}\r\n                style={{ marginRight: 10 }}\r\n              >\r\n                ‚úÖ Accept\r\n              </button>\r\n              <button\r\n                onClick={() => updateOrderStatus(order.id, \"rejected\")}\r\n                style={{ backgroundColor: \"crimson\", color: \"#fff\" }}\r\n              >\r\n                ‚ùå Reject\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}