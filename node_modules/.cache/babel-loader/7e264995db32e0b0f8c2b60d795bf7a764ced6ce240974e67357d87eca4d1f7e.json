{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suram\\\\food-ordering-app\\\\src\\\\Pages\\\\AdminView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminView = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n\n  // Load orders from localStorage when component mounts\n  useEffect(() => {\n    const stored = localStorage.getItem(\"orders\");\n    if (stored) {\n      setOrders(JSON.parse(stored));\n    }\n  }, []);\n\n  // Update order status and persist changes\n  const updateOrderStatus = (orderId, newStatus) => {\n    const updatedOrders = orders.map(order => order.id === orderId ? {\n      ...order,\n      status: newStatus\n    } : order);\n    setOrders(updatedOrders);\n    localStorage.setItem(\"orders\", JSON.stringify(updatedOrders));\n    alert(`Order ${orderId} has been ${newStatus}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDDFE Admin Dashboard \\u2013 Incoming Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), orders.filter(order => order.status === \"pending\").length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No new orders at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : orders.filter(order => order.status === \"pending\").map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 15,\n        marginBottom: 15,\n        borderRadius: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Table #\", order.table]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" x \", item.qty]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order.id, \"accepted\"),\n          style: {\n            marginRight: 10\n          },\n          children: \"\\u2705 Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order.id, \"rejected\"),\n          style: {\n            backgroundColor: \"crimson\",\n            color: \"#fff\"\n          },\n          children: \"\\u274C Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)]\n    }, order.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminView, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = AdminView;\nexport default AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminView","_s","orders","setOrders","stored","localStorage","getItem","JSON","parse","updateOrderStatus","orderId","newStatus","updatedOrders","map","order","id","status","setItem","stringify","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","length","border","marginBottom","borderRadius","table","items","item","name","qty","marginTop","onClick","marginRight","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/suram/food-ordering-app/src/Pages/AdminView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminView = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Load orders from localStorage when component mounts\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"orders\");\r\n    if (stored) {\r\n      setOrders(JSON.parse(stored));\r\n    }\r\n  }, []);\r\n\r\n  // Update order status and persist changes\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === orderId ? { ...order, status: newStatus } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n    localStorage.setItem(\"orders\", JSON.stringify(updatedOrders));\r\n    alert(`Order ${orderId} has been ${newStatus}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>üßæ Admin Dashboard ‚Äì Incoming Orders</h2>\r\n\r\n      {orders.filter(order => order.status === \"pending\").length === 0 ? (\r\n        <p>No new orders at the moment.</p>\r\n      ) : (\r\n        orders\r\n          .filter(order => order.status === \"pending\")\r\n          .map((order) => (\r\n            <div\r\n              key={order.id}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                padding: 15,\r\n                marginBottom: 15,\r\n                borderRadius: 5\r\n              }}\r\n            >\r\n              <h3>Table #{order.table}</h3>\r\n              <ul>\r\n                {order.items.map((item) => (\r\n                  <li key={item.id}>\r\n                    {item.name} x {item.qty}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <div style={{ marginTop: 10 }}>\r\n                <button\r\n                  onClick={() => updateOrderStatus(order.id, \"accepted\")}\r\n                  style={{ marginRight: 10 }}\r\n                >\r\n                  ‚úÖ Accept\r\n                </button>\r\n                <button\r\n                  onClick={() => updateOrderStatus(order.id, \"rejected\")}\r\n                  style={{ backgroundColor: \"crimson\", color: \"#fff\" }}\r\n                >\r\n                  ‚ùå Reject\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}